ENVIRONMENT:
  MAX_EPISODE_STEPS: 500

SIMULATOR:
  TURN_ANGLE: 30
  TILT_ANGLE: 30
  ACTION_SPACE_CONFIG: "v1"
  AGENT_0:
    SENSORS: ['RGB_SENSOR', 'DEPTH_SENSOR']
    HEIGHT: 0.88
    RADIUS: 0.18
  HABITAT_SIM_V0:
    GPU_DEVICE_ID: 0
    ALLOW_SLIDING: False
    # PHYSICS_CONFIG_FILE: "data/default_real.phys_scene_config.json"

  # NOTE: Original HM3D Config has 480 x 640 resolution but we are chaning as pointnav policy accept 256 x 256 
  SEMANTIC_SENSOR:
    WIDTH: 640
    HEIGHT: 480
    HFOV: 79
    POSITION: [0, 0.88, 0]
  RGB_SENSOR:
    WIDTH: 640
    HEIGHT: 480
    HFOV: 79
    POSITION: [0, 0.88, 0]
  DEPTH_SENSOR:
    WIDTH: 640
    HEIGHT: 480
    HFOV: 79
    POSITION: [0, 0.88, 0]

TASK:
  TYPE: ObjectNav-v1
  POSSIBLE_ACTIONS: ["STOP", "MOVE_FORWARD", "TURN_LEFT", "TURN_RIGHT"]

  SENSORS: ['OBJECTGOAL_SENSOR', 'COMPASS_SENSOR', 'GPS_SENSOR',
            'POSITION_SENSOR', 'ROTATION_SENSOR',   # NOTE: Added in addition to the original HM3D sensors
            'POINTGOAL_WITH_GPS_COMPASS_SENSOR',    # NOTE: pointgoal_with_gps readings from simulator are NOT ACTUALLY used but required for setting up pointnav policy input + comment out the MON custom POINTGOAL_WITH_GPS_COMPASS_SENSOR in multion/sensors.py
            'SEMANTIC_CATEGORY_SENSOR']    
  GOAL_SENSOR_UUID: objectgoal

  POINTGOAL_WITH_GPS_COMPASS_SENSOR:
    GOAL_FORMAT: "POLAR"
    DIMENSIONALITY: 2

  # NOTE: Comment out MON custom success metric in multion/measures.py when running ObjNav experiments as "SUCCESS" will point to custom MON success metric
  MEASUREMENTS: ['DISTANCE_TO_GOAL', 'SUCCESS', 'SPL', 'SOFT_SPL']

  DISTANCE_TO_GOAL:
    DISTANCE_TO: VIEW_POINTS
  SUCCESS:
    SUCCESS_DISTANCE: 0.1
  
  SLACK_REWARD: -0.01
  SUCCESS_REWARD: 2.5
  REWARD_MEASURE: "distance_to_goal"
  SUCCESS_MEASURE: "spl"

DATASET:
  TYPE: ObjectNav-v1
  SPLIT: val
  DATA_PATH: "data/datasets/objectnav/hm3d/v1/{split}/{split}.json.gz"
  SCENES_DIR: "data/scene_datasets/"
